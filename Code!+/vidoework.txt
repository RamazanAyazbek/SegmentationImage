Сегментация изображений

Цель этого задания - выполнить автоматическую сегментацию переднего плана / фона
для извлечения силуэта целевого объекта из видеофайла. Это
задание является частью операций, необходимых для заключительного проекта
курса предыдущего года (подробнее здесь).

Начните с загрузки набора данных с:

https://www.dais.unive.it /~bergamasco/обучающие файлы/G3DCV2022/data.7z

В пакете вы найдете видео
последовательности из 4 объектов на вращающемся проигрывателе
(obj1.mp4 . . . obj4.mp4).

Ваша задача - создать программу на Python (или записную книжку), которая:

• открывает один из видеофайлов, упомянутых выше
• вычисляет двоичное пороговое изображение для каждого кадра, в котором белые пиксели соответствуют объекту на поворотном столе, а черные пиксели фону.
• сохраняет изображения с пороговым значением в видео с именем obj1_mask.mp4 . . .
obj4_mask.mp4
• оценивает результаты по набору достоверных изображений местности.



Методы сегментации

Ваша программа должна реализовывать два различных подхода к сегментации, выбираемых
перед выполнением:

1. алгоритм водораздела на основе исходных данных, реализованный функцией OpenCV watershed() и описанный в [1]

2. пользовательский алгоритм, разработанный вами самостоятельно, объединяющий основные операции, такие как преобразование цветового пространства, пороговое значение, фильтрация и т.д.

Оба метода могут использовать настраиваемые параметры для каждого видеофайла. Например,
список семян (или маркеров), используемых watershed, может быть жестко запрограммирован. Однако такие параметры не могут изменяться на протяжении всей обработки видео
последовательность.

Оценка
Вместе с обработкой целых видео последовательностей вы должны оценить
два подхода по некоторым достоверным изображениям, извлеченным из оригинальных
видеороликов:
1. Загрузите тестовый набор данных здесь:
https://www.dsi.unive.it /~бергамаско/обучающие файлы/резюме/задание
1_test_dataset.7z
2. Выполните сегментацию каждого изображения наземной съемки обоими
методами
3. Сравните результат с базовыми масками правды.
Для сравнения рассмотрим как положительный пиксель, классифицированный как объект (т.е. белый)
и отрицательные пиксели фона (т.е. черные). Вычислите путаницу
матрица, содержащая количество ложно положительных результатов, ложно отрицательных результатов, истинно положительных
результатов и истинно отрицательных результатов. Затем вычислите точность, отзыв и аккуратность.